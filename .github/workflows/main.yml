name: CI/CD Docker DevSecOps

on:
  push:
    branches: [ main, develop,feature ]
  pull_request:
    branches: [ main, develop,feature ]
jobs:
  security-build:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      # === PHASE DE S√âCURIT√â ===
      - name: üîç Analyse de code (Bandit)
        run: |
          python -m pip install bandit
          bandit -r . -f json -o bandit-report.json || echo "Bandit scan completed (vuln√©rabilit√©s trouv√©es)"

      - name: üì¶ Scan des d√©pendances (OWASP)
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'My Docker Project'
          scanpath: '.'
          format: 'HTML'
          out: './security-report'

      - name: üê≥ Analyse de l'image Docker (Trivy)
        run: |
          # Installation de Trivy
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy
          
          # Scan avec gestion des erreurs
          trivy fs --security-checks vuln --severity HIGH,CRITICAL --exit-code 0 --format table . || echo "Trivy scan completed"

      # === PHASE DE CONSTRUCTION ===
      - name: üõ†Ô∏è Build Docker image
        run: |
          docker build -t my-app --pull --no-cache .
          docker scan --file Dockerfile my-app || echo "Docker scan completed"

      # === PHASE DE TEST ===
      - name: üß™ Tests de s√©curit√© (ZAP)
        uses: zaproxy/action-baseline@v0.10.0
        continue-on-error: true
        with:
          target: 'http://localhost:8080'
          rules: 'rules/security'

      - name: üìÑ Archivage des rapports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            ./bandit-report.json
            ./security-report
            ./trivy-results.txt

      # === NETTOYAGE ===
      - name: üßπ Nettoyage des fichiers temporaires
        run: |
          # Suppression conditionnelle
          [ -f trivy_envs.txt ] && rm -f trivy_envs.txt || echo "Fichier trivy_envs.txt non trouv√©"
          docker system prune -f
          docker save my-app -o my-app.tar
          gzip my-app.tar
        continue-on-error: true

      - name: ‚¨ÜÔ∏è Upload image package
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: my-app.tar.gz
